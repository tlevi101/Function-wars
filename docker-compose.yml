version: '3'
services:
  mysql:
    image: mysql
    container_name: mysql
    restart: unless-stopped
    ports:
        - "3306:3306"
    environment:
        MYSQL_ROOT_PASSWORD: rootpw
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
        MYSQL_ROOT_HOST: localhost
        MYSQL_DATABASE: function_wars
        MYSQL_USER: docker_user
        MYSQL_PASSWORD: docker_pw
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - app-network
  nodejs:
    build: ./backend
    image: backend-node
    container_name: nodejs
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      - DB_USERNAME=docker_user
      - DB_PASSWORD=docker_pw
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=function_wars
    ports:
      - 4000:4000
      - 3000:3000
    expose:
      - 4000
      - 3000
    depends_on:
      - mysql
    volumes:
      - .:/usr/src/app
      - backend_node_modules:/usr/src/app/backend/node_modules
    networks:
      - app-network
  angular:
    build: ./frontend
    image: frontend-node
    container_name: angular
    restart: unless-stopped
    ports:
      - 80:8080
    expose:
      - 8080
    volumes:
      - .:/usr/src/app
      - frontend_node_modules:/usr/src/app/frontend/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql:
  frontend_node_modules:
  backend_node_modules:
